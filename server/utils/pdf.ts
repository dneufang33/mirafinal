import PDFDocument from 'pdfkit';
import { type Questionnaire } from "../../shared/schema";

export async function generatePDF(reading: string, questionnaire: Questionnaire): Promise<Buffer> {
  return new Promise((resolve, reject) => {
    try {
      const doc = new PDFDocument({
        size: 'A4',
        margin: 50,
        info: {
          Title: 'Your Sacred Birth Chart Reading',
          Author: 'Celestial Mira',
          Subject: 'Personalized Astrological Reading'
        }
      });

      const chunks: Buffer[] = [];
      doc.on('data', (chunk: Buffer) => chunks.push(chunk));
      doc.on('end', () => resolve(Buffer.concat(chunks)));
      doc.on('error', reject);

      // Header
      doc
        .fontSize(24)
        .font('Helvetica-Bold')
        .text('Your Sacred Birth Chart Reading', { align: 'center' })
        .moveDown(2);

      // Client Information
      doc
        .fontSize(14)
        .font('Helvetica-Bold')
        .text('Birth Chart Information')
        .moveDown(0.5)
        .fontSize(12)
        .font('Helvetica')
        .text(`Birth Date: ${questionnaire.birthDate}`)
        .text(`Zodiac Sign: ${questionnaire.zodiacSign}`)
        .text(`Birth Place: ${questionnaire.birthCity}, ${questionnaire.birthCountry}`)
        .text(`Age: ${questionnaire.age}`)
        .moveDown(1);

      // Reading Content
      doc
        .fontSize(14)
        .font('Helvetica-Bold')
        .text('Your Personalized Reading')
        .moveDown(0.5)
        .fontSize(12)
        .font('Helvetica')
        .text(reading, {
          align: 'justify',
          lineGap: 5
        })
        .moveDown(2);

      // Footer
      doc
        .fontSize(10)
        .font('Helvetica-Oblique')
        .text(
          'This reading is generated by Celestial Mira using advanced astrological calculations and AI technology.',
          { align: 'center' }
        )
        .text(
          'Â© ' + new Date().getFullYear() + ' Celestial Mira. All rights reserved.',
          { align: 'center' }
        );

      doc.end();
    } catch (error) {
      reject(error);
    }
  });
} 